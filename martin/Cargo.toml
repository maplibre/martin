[package]
name = "martin"
version = "0.19.1"
authors = [
    "Stepan Kuzmin <to.stepan.kuzmin@gmail.com>",
    "Yuri Astrakhan <YuriAstrakhan@gmail.com>",
    "MapLibre contributors",
]
description = "Blazing fast and lightweight tile server with PostGIS, MBTiles, and PMTiles support"
keywords = ["maps", "tiles", "mbtiles", "pmtiles", "postgis"]
categories = ["science::geo", "web-programming::http-server"]
default-run = "martin"
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
homepage.workspace = true

[package.metadata.deb]
name = "martin"
revision = ""
maintainer = "Yuri Astrakhan <YuriAstrakhan@gmail.com>, Stepan Kuzmin <to.stepan.kuzmin@gmail.com>, MapLibre contributors"
maintainer-scripts = "../debian"
depends = "$auto"
assets = [
    [
    "target/release/martin",
    "/usr/bin/martin",
    "755",
  ],
    [
    "target/release/martin-cp",
    "/usr/bin/martin-cp",
    "755",
  ],
    [
    "target/release/mbtiles",
    "/usr/bin/mbtiles",
    "755",
  ],
    [
    "../README.md",
    "/usr/share/doc/martin/README.md",
    "644",
  ],
    [
    "../debian/config.yaml",
    "/usr/share/doc/martin/config.yaml",
    "644",
  ],
    [
    "../debian/config.yaml",
    "/usr/local/etc/martin/config.yaml",
    "644",
  ],
]

# see https://github.com/kornelski/cargo-deb/blob/main/systemd.md#packagemetadatadebsystemd-units-options
[package.metadata.deb.systemd-units]
unit-scripts = "../debian/"
enable = false
start = false
restart-after-upgrade = false
stop-on-upgrade = true

[lib]
path = "src/lib.rs"

[[bin]]
name = "martin"
path = "src/bin/martin.rs"

[[bin]]
name = "martin-cp"
path = "src/bin/martin-cp.rs"
required-features = ["mbtiles"]

[[bench]]
name = "sources"
harness = false

[features]
default = [
    "cog",
    "fonts",
    "lambda",
    "mbtiles",
    "metrics",
    "pmtiles",
    "postgres",
    "sprites",
    "styles",
    "webui",
]
cog = ["martin-core/cog"]
fonts = ["martin-core/fonts"]
lambda = ["dep:lambda-web"]
mbtiles = ["martin-core/mbtiles"]
metrics = ["dep:actix-web-prom"]
pmtiles = ["martin-core/pmtiles"]
postgres = [
    "martin-core/postgres",
    "dep:enum-display",
    "dep:json-patch",
    "dep:postgis",
    "dep:postgres-protocol",
]
sprites = ["martin-core/sprites"]
styles = ["martin-core/styles", "dep:walkdir"]
webui = ["dep:actix-web-static-files", "dep:static-files", "dep:walkdir"]

[dependencies]
actix-cors.workspace = true
actix-http.workspace = true
actix-middleware-etag.workspace = true
actix-rt.workspace = true
actix-web.workspace = true
actix-web-prom = { workspace = true, optional = true }
actix-web-static-files = { workspace = true, optional = true }
async-trait.workspace = true
clap.workspace = true
dashmap.workspace = true
enum-display = { workspace = true, optional = true }
env_logger.workspace = true
futures.workspace = true
itertools.workspace = true
json-patch = { workspace = true, optional = true }
lambda-web = { workspace = true, optional = true }
log.workspace = true
martin-core.workspace = true
martin-tile-utils.workspace = true
mbtiles.workspace = true
num_cpus.workspace = true
postgis = { workspace = true, optional = true }
postgres-protocol = { workspace = true, optional = true }
rustls.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
serde_yaml.workspace = true
static-files = { workspace = true, optional = true }
subst.workspace = true
thiserror.workspace = true
tiff = { workspace = true, optional = true }
tilejson.workspace = true
tokio = { workspace = true, features = ["io-std"] }
url.workspace = true
walkdir = { workspace = true, optional = true }
xxhash-rust.workspace = true

[build-dependencies]
static-files = { workspace = true, optional = true }
walkdir = { workspace = true, optional = true }

[dev-dependencies]
approx.workspace = true
criterion.workspace = true
ctor.workspace = true
indoc.workspace = true
insta = { workspace = true, features = ["json", "yaml", "redactions"] }
pprof.workspace = true
rstest.workspace = true
tempfile.workspace = true

[lints]
workspace = true
